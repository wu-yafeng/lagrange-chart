1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.portal.service.type }}
  export NODE_PORT_HTTP=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "lagrange-onebot.fullname" . }})
  export NODE_PORT_WS=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[1].nodePort}" services {{ include "lagrange-onebot.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "HTTP API: http://$NODE_IP:$NODE_PORT_HTTP"
  echo "WebSocket: ws://$NODE_IP:$NODE_PORT_WS"
{{- else if contains "LoadBalancer" .Values.portal.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "lagrange-onebot.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "lagrange-onebot.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo "HTTP API: http://$SERVICE_IP:{{ .Values.portal.service.httpPort }}"
  echo "WebSocket: ws://$SERVICE_IP:{{ .Values.portal.service.wsPort }}"
{{- else if contains "ClusterIP" .Values.portal.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "lagrange-onebot.selectorLabels" . }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT_HTTP=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  export CONTAINER_PORT_WS=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[1].containerPort}")
  echo "HTTP API: http://127.0.0.1:8080"
  echo "WebSocket: ws://127.0.0.1:8081"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT_HTTP 8081:$CONTAINER_PORT_WS
{{- end }}

2. To check the QR code for login (if using QR code login):
  kubectl logs --namespace {{ .Release.Namespace }} -l "{{ include "lagrange-onebot.selectorLabels" . }}" -f

3. To access the application data:
{{- if .Values.persistence.enabled }}
  The application data is persisted in StatefulSet volumes.
{{- else }}
  WARNING: Data persistence is disabled. All data will be lost when the pod restarts.
{{- end }}

4. Configuration:
  - QQ UIN: {{ .Values.config.account.uin }}
  - Protocol: {{ .Values.config.account.protocol }}
  - HTTP Port: {{ .Values.portal.service.httpPort }}
  - WebSocket Port: {{ .Values.portal.service.wsPort }}
{{- if .Values.config.accessToken.autoGenerate }}

5. Access Token:
  An access token has been automatically generated for secure API access.
  To retrieve the generated token, run:
    kubectl get secret --namespace {{ .Release.Namespace }} {{ include "lagrange-onebot.fullname" . }}-token -o jsonpath="{.data.accessToken}" | base64 --decode
{{- end }}

6. OneBot API Documentation:
  Visit https://onebot.dev/ for OneBot API documentation.

7. Lagrange.Core Documentation:
  Visit https://lagrangedev.github.io/Lagrange.Doc/ for more information.
