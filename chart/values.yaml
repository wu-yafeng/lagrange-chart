# Default values for lagrange-onebot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/lagrangedev/lagrange.onebot
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "edge"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Environment variables for the container
env:
  # 在Docker中运行的标识
  RUNNING_IN_DOCKER: "true"

# Lagrange.OneBot 配置
config:
  # 是否创建默认配置文件
  createDefault: true
  
  # 访问令牌配置
  accessToken:
    # 是否自动生成随机 token
    autoGenerate: true
    # 手动指定的 token（如果 autoGenerate 为 false）
    value: ""
    # 生成的 token 长度
    length: 32
  
  # QQ账号配置
  account:
    uin: "123456789"  # QQ号
    password: ""      # QQ密码 (可选，推荐使用二维码登录)
    protocol: "Linux" # 协议类型: Linux, Windows, MacOs
    autoReconnect: true
    useIPv6Network: false
    getOptimumServer: true
    autoReLogin: true

  # 二维码登录配置
  qrCode:
    consoleCompatibilityMode: false

  # 签名服务器配置
  signing:
    serverUrl: ""                                # 自定义签名服务器URL
    signServer: "https://sign.lagrangecore.org"  # 默认签名服务器
    serverTimeout: 60000
    fallbackVersion: "3.2.15-30366"

  # 日志配置
  logging:
    logLevel: "Information"
    consoleOutputTemplate: "[{Timestamp:yyyy-MM-dd HH:mm:ss}] [{Level:u3}] {Message:lj}{NewLine}{Exception}"

  # OneBot实现配置
  implementations:
    # HTTP服务
    - type: Http
      host: "*"
      port: 8080
      accessToken: ""

    # 正向WebSocket
    # - type: ForwardWebSocket
    #   host: "*"
    #   port: 8081
    #   heartBeatInterval: 5000
    #   heartBeatEnable: true
    #   accessToken: ""

    # HTTP POST服务 (可选)
    # - type: HttpPost
    #   host: "http://example.com"
    #   port: 80
    #   suffix: "/lagrange"
    #   secret: ""
    #   heartBeatInterval: 5000
    #   heartBeatEnable: true

    # 反向WebSocket (可选)
    # - type: ReverseWebSocket
    #   host: "ws://example.com"
    #   port: 8080
    #   suffix: "/lagrange"
    #   apiSuffix: "/api"
    #   eventSuffix: "/event"
    #   useUniversalClient: true
    #   accessToken: ""
    #   heartBeatInterval: 5000
    #   heartBeatEnable: true
    #   reconnectInterval: 5000

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  {}

service:
  type: ClusterIP
  # HTTP服务端口
  httpPort: 8080
  # WebSocket端口
  wsPort: 8081

# 用于外部访问的Ingress配置
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: lagrange.local
      paths:
        - path: /
          pathType: Prefix
          # 可以指定后端服务端口: http 或 ws
          backend: http
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# 数据持久化
persistence:
  enabled: true
  # 存储类名称，留空使用默认存储类
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi
